{"version":3,"sources":["pages/home.jsx","socketConfig.js","firebase.js","pages/create.jsx","pages/join.jsx","pages/room.jsx","pages/game.jsx","pages/vote.jsx","pages/result.jsx","pages/final.jsx","App.js","index.js"],"names":["Home","renderCreate","setState","create","renderJoin","join","state","className","onClick","this","to","React","Component","socket","socketIOClient","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Create","makeId","result","charactersLength","length","i","charAt","Math","floor","random","code","createGroup","emit","hasGottenWords","db","firestore","collection","add","words","then","where","get","querySnapshot","docs","forEach","snapshot","ref","name","score","updateName","event","target","value","hasCreated","on","for","id","type","readonly","onChange","pathname","Join","joinGroup","docRef","empty","alert","updateCode","hasJoined","Room","props","createGame","docsArray","data","push","round","word","batch","doc","set","commit","location","players","groupSize","hasReceivedGroupSize","readyToRedirectToGame","onSnapshot","includes","prevState","map","player","idx","key","Game","canvasRef","useRef","contextRef","useState","isDrawing","setIsDrawing","time","setTime","voteTime","setVoteTime","setWord","useEffect","console","log","pictures","canvas","current","width","window","innerWidth","height","innerHeight","style","context","getContext","scale","lineCap","strokeStyle","lineWidth","a","getWord","time2","interval","setInterval","clearInterval","dataURL","toDataURL","artist","votes","myAsyncFunc","clearRect","onMouseDown","nativeEvent","offsetX","offsetY","beginPath","moveTo","onMouseUp","closePath","onMouseMove","lineTo","stroke","Vote","setPictures","resultTime","setResultTime","vote","setVote","inputRef","setArtist","voting","setVoting","doneVoting","setDoneVoting","numVotes","concat","picture","submitVote","votedArtist","update","FieldValue","increment","href","download","Result","winningPic","setWinningPic","winningArtist","setWinningArtist","nextRoundTime","setNextRoundTime","finalScoreTime","setFinalScoreTime","orderBy","limit","src","Final","setPlayers","winner","setWinner","winningScore","setWinningScore","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.237fb3eb.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './styles.css';\n\nclass Home extends React.Component{\n    constructor() {\n        super();\n        this.state = {create: false, join: false};\n    }\n    renderCreate = () => {\n        this.setState({create: true});\n    }\n    renderJoin = () => {\n        this.setState({join: true});\n    }\n    render () {\n        return (\n            <div>\n                <div className=\"vert\">\n                    <div className=\"center\">\n                        <h1 className=\"header1\">Quipdraw (Jackbox Games please buy us)</h1>\n                    </div>\n                    <div className=\"center\">\n                        <button onClick={this.renderCreate}>Create Room</button>\n                        { this.state.create ? <Redirect to=\"/create\"/> : null }\n                        <button onClick={this.renderJoin}>Join Room</button>\n                        { this.state.join ? <Redirect to=\"/join\"/> : null }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import socketIOClient from \"socket.io-client\";\nconst socket = socketIOClient(\"http://localhost:4001\");\nexport default socket;","import * as firebase from 'firebase';\n\nlet config = {\n    apiKey: \"AIzaSyCR-CT3Waz5YjcbUczlG3OrzA4Co5Y-xvw\",\n    authDomain: \"quiplash-drawing-game.firebaseapp.com\",\n    databaseURL: \"https://quiplash-drawing-game.firebaseio.com\",\n    projectId: \"quiplash-drawing-game\",\n    storageBucket: \"quiplash-drawing-game.appspot.com\",\n    messagingSenderId: \"901366300288\",\n    appId: \"1:901366300288:web:40d455c6c9b28af2997065\",\n    measurementId: \"G-SVLHT6Y2WS\"\n  };\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport socket from \"../socketConfig\";\nimport firebase from \"../firebase\";\nimport './styles.css';\n\nclass Create extends React.Component {\n\n    constructor() {\n      super();\n      this.state = {code: '', name: '', hasCreated: false, words: [], hasGottenWords: false};\n    }\n\n    componentDidMount() {\n      this.makeId();\n      socket.on('hasCreatedGroup', () => {\n        this.setState({hasCreated: true});\n      });\n      socket.on('hasGottenWords', (words) => {\n        this.setState({words: words});\n        this.setState({hasGottenWords: true});\n      });\n    }\n  \n    makeId = () => {\n      var result           = '';\n      var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n      var charactersLength = characters.length;\n      for ( var i = 0; i < 4; i++ ) {\n         result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n      this.setState({code: result});\n   }\n  \n    createGroup = () => {\n      socket.emit(\"getWords\", \"getWords\");\n      if (this.state.hasGottenWords) {\n        const db = firebase.firestore();\n        db.collection(\"rooms\").add({\n          code: this.state.code,\n          words: this.state.words\n        }).then(() => {\n          db.collection(\"rooms\").where(\"code\", \"==\", this.state.code).get().then((querySnapshot) => {\n            querySnapshot.docs.forEach((snapshot) => {\n              snapshot.ref.collection(\"players\").add({name: this.state.name, score: 0}).then(() => {\n                socket.emit(\"createGroup\", this.state.code);\n              });\n            });\n          });\n        });\n      }\n    }\n  \n    updateName = (event) => {\n      this.setState({name: event.target.value});\n    }\n  \n    render() {\n      return (\n        <div>\n          <div className=\"vert\">\n            <div className=\"center\">\n              <label for=\"code\" id=\"l1\">Room Code:</label>\n              <input type=\"text\" id=\"code\" value={this.state.code} readonly/>\n            </div>\n            <div className=\"center\">\n              <label for=\"name\" id=\"l2\">Name</label>\n              <input type=\"text\" id=\"name\" onChange={this.updateName}/>\n            </div>\n            <div className=\"center\">\n              <button id=\"Done1\" onClick={this.createGroup}>Done</button>\n            </div>\n            { this.state.hasCreated && this.state.hasGottenWords ? <Redirect to={{pathname: '/room', state: {code: this.state.code, name: this.state.name, hasCreated: this.state.hasCreated}}}/> : null }\n          </div>\n        </div>\n      )\n    }\n  }\n\n  export default Create;","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport socket from \"../socketConfig\";\nimport firebase from '../firebase.js';\nimport './styles.css';\n\nclass Join extends React.Component {\n\n    constructor() {\n      super();\n      this.state = {code: '', name: '', hasJoined: false};\n    }\n\n    componentDidMount() {\n      socket.on(\"joinCompleted\", () => {\n        this.setState({hasJoined: true});\n      });\n    }\n    \n    joinGroup = () => {\n      const db = firebase.firestore();\n      let docRef = db.collection(\"rooms\").where(\"code\", \"==\", this.state.code);\n      docRef.get().then((querySnapshot) => {\n        if (!querySnapshot.empty) {\n          docRef.get().then((querySnapshot) => {\n            querySnapshot.docs.forEach((snapshot) => {\n              snapshot.ref.collection(\"players\").add({name: this.state.name, score: 0}).then(() => {\n                socket.emit(\"joinGroup\", this.state.code);\n              });\n            });\n          });\n        }\n        else {\n          alert(\"no group with that code exists!\");\n        }\n      });\n    }\n  \n    updateName = (event) => {\n      this.setState({name: event.target.value});\n    }\n\n    updateCode = (event) => {\n      this.setState({code: event.target.value});\n    }\n  \n    render() {\n      return (\n        <div>\n          <div className=\"vert\">\n            <div className=\"center\">\n              <label for=\"code\" id=\"l1\">Room Code:</label>\n              <input type=\"text\" id=\"code\" onChange={this.updateCode}/>\n            </div>\n            <div className=\"center\">\n              <label for=\"name\" id=\"l2\">Name</label>\n              <input type=\"text\" id=\"name\" onChange={this.updateName}/>\n            </div>\n            <div className=\"center\">\n              <button id=\"Done2\" onClick={this.joinGroup}>Done</button>\n            </div>\n          </div>\n            { this.state.hasJoined ? <Redirect to={{pathname: '/room', state: { code: this.state.code, name: this.state.name, hasCreated: false}}}/> : null }\n        </div>\n      )\n    }\n  }\n\n  export default Join;","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport socket from \"../socketConfig\";\nimport firebase from '../firebase.js';\nimport './styles.css';\n\nclass Room extends React.Component {\n\n        constructor(props) {\n          super(props);\n          this.state = {\n            code: this.props.location.state.code,\n            name: this.props.location.state.name,\n            players: [],\n            groupSize: 0,\n            hasReceivedGroupSize: false,\n            readyToRedirectToGame: false,\n          };\n        }\n      \n        componentDidMount() {\n          const db = firebase.firestore();\n          db.collection(\"rooms\").where(\"code\", \"==\", this.state.code).get().then((querySnapshot) => {\n            querySnapshot.docs.forEach((snapshot) => {\n              snapshot.ref.collection(\"players\").onSnapshot((querySnapshot) => {\n                querySnapshot.docs.forEach((snapshot) => {\n                  if (!this.state.players.includes(snapshot.data().name)) {\n                    this.setState(prevState => ({\n                      players: [...prevState.players, snapshot.data().name]\n                    }));\n                  }\n                });\n              });\n            });\n          });\n\n          socket.on(\"play\", (groupSize) => {\n            this.setState({groupSize: groupSize});\n            this.setState({hasReceivedGroupSize: true});\n            this.setState({readyToRedirectToGame: true});\n          });\n        }\n\n        createGame = () => {\n          const db = firebase.firestore();\n          db.collection(\"rooms\").where(\"code\", \"==\", this.state.code).get().then((querySnapshot) => {\n            querySnapshot.docs.forEach((snapshot) => {\n              const docsArray = [];\n              for (let i = 0; i < snapshot.data().words.length; i ++) {\n                docsArray.push({round: i + 1, word: snapshot.data().words[i]});\n              }\n              const batch = db.batch();\n              docsArray.forEach((doc) => {\n                let docRef = snapshot.ref.collection(\"rounds\").doc();\n                batch.set(docRef, doc);\n              });\n              batch.commit().then(() => {\n                socket.emit(\"play\", this.state.code);\n              });\n            });\n          });\n        }\n\n      \n        render() {\n          return (\n            <div>\n              <div className=\"center\">\n                <label for=\"playersList\" id=\"label\">Players who have joined the room:</label>\n              </div>\n              <div className=\"center\">\n                <ul id=\"playersList\">\n                  {this.state.players.map((player, idx) => {\n                    return <li key={idx}>{player}</li> })}\n                </ul>\n              </div>\n              <div className=\"center\">\n                <button type=\"button\" id=\"play\" onClick={this.createGame}>Play</button>\n              </div>\n              {this.state.readyToRedirectToGame && this.state.hasReceivedGroupSize ? <Redirect to={{pathname: '/game', state: {code: this.state.code, name: this.state.name, groupSize: this.state.groupSize, round: 1}}}/> : null }\n            </div>\n          )\n        }\n      }\n\n  export default Room;","import React, { useRef, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport socket from \"../socketConfig\";\nimport firebase from '../firebase.js';\nimport './styles.css';\n\nfunction Game(props) {\n\n  const canvasRef = useRef(null)\n  const contextRef = useRef(null)\n  const [isDrawing, setIsDrawing] = useState(false)\n  const [time, setTime] = useState(20);\n  const [code, setCode] = useState(props.location.state.code);\n  const [name, setName] = useState(props.location.state.name);\n  const [round, setRound] = useState(props.location.state.round);\n  const [voteTime, setVoteTime] = useState(false);\n  const [groupSize, setGroupSize] = useState(props.location.state.groupSize);\n  const [word, setWord] = useState();\n\n  useEffect(() => {\n    console.log(groupSize);\n    let pictures = 0;\n    socket.on('picture', () => {\n      console.log(\"picture came in\");\n      pictures ++;\n      if (pictures == groupSize) {\n        setVoteTime(true);\n      }\n    });\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth * 2;\n    canvas.height = window.innerHeight * 2;\n    canvas.style.width = `${window.innerWidth}px`;\n    canvas.style.height = `${window.innerHeight}px`;\n\n    const context = canvas.getContext(\"2d\")\n    context.scale(2,2)\n    context.lineCap = \"round\"\n    context.strokeStyle = \"black\"\n    context.lineWidth = 5\n    contextRef.current = context;\n    const myAsyncFunc = async() =>{\n      await getWord();\n      let time2 = 20;\n      const interval = setInterval(() =>{\n        setTime(time => time - 1);\n        time2 = time2 - 1;\n        if (time2 == 0) {\n          clearInterval(interval);\n          let dataURL = canvasRef.current.toDataURL();\n          const db = firebase.firestore();\n          db.collection(\"rooms\").where(\"code\", \"==\", code).get().then((querySnapshot) => {\n            querySnapshot.docs.forEach((snapshot) => {\n              snapshot.ref.collection(\"rounds\").where(\"round\", \"==\", round).get().then((querySnapshot) => {\n                querySnapshot.docs.forEach((snapshot) => {\n                  snapshot.ref.collection(\"pictures\").add({artist: name, dataURL: dataURL, votes: 0}).then(() => {\n                    socket.emit(\"picture\", code);\n                  });\n                });\n              });\n            });\n          });\n        }\n    }, 1000);\n  }\n  myAsyncFunc();\n  }, []);\n\n  const getWord = async() => {\n    const db = firebase.firestore();\n    db.collection(\"rooms\").where(\"code\", \"==\", code).get().then((querySnapshot) => {\n      querySnapshot.docs.forEach((snapshot) => {\n        snapshot.ref.collection(\"rounds\").where(\"round\", \"==\", round).get().then((querySnapshot) => {\n          querySnapshot.docs.forEach((snapshot) => {\n              setWord(snapshot.data().word);\n          });\n      });\n  });\n});\n}\n\n  const startDrawing = ({nativeEvent}) => {\n    const {offsetX, offsetY} = nativeEvent;\n    contextRef.current.beginPath()\n    contextRef.current.moveTo(offsetX, offsetY)\n    setIsDrawing(true)\n  }\n\n  const finishDrawing = () => {\n   contextRef.current.closePath()\n   setIsDrawing(false)\n  }\n\n  const draw = ({nativeEvent}) => {\n    if(!isDrawing){\n      return\n    }\n    const {offsetX, offsetY} = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY)\n    contextRef.current.stroke()\n  }\n\n  const clearCanvas = () => {\n    contextRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  }\n\n  return (\n    <div>\n      <div className=\"center\">\n        <h1 className=\"header2\">{time}</h1>\n        <h1 className=\"header2\">{word}</h1>\n        <button onClick={clearCanvas}>Clear</button>\n      </div>\n      <canvas\n      onMouseDown={startDrawing}\n      onMouseUp={finishDrawing}\n      onMouseMove={draw}\n      ref={canvasRef}\n      />\n      {voteTime ? <Redirect to={{pathname: '/vote', state: {code: code, name: name, round: round, groupSize: groupSize}}}/> : null }\n    </div>\n    );\n}\n\nexport default Game;","import React, { useRef, useEffect, useState } from 'react';\nimport socket from \"../socketConfig\";\nimport firebase from '../firebase.js';\nimport { Redirect } from 'react-router-dom';\nimport \"./styles.css\";\n\nfunction Vote(props) {\n  const [code, setCode] = useState(props.location.state.code);\n  const [name, setName] = useState(props.location.state.name);\n  const [pictures, setPictures] = useState([]);\n  const [round, setRound] = useState(props.location.state.round);\n  const [resultTime, setResultTime] = useState(false);\n  const [groupSize, setGroupSize] = useState(props.location.state.groupSize);\n  const [vote, setVote] = useState();\n  const inputRef = useRef(null);\n  const [time, setTime] = useState(20);\n  const [word, setWord] = useState();\n  const [artist, setArtist] = useState();\n  const [voting, setVoting] = useState(false);\n  const [doneVoting, setDoneVoting] = useState(false);\n\n  useEffect(() => {\n    setVoting(true);\n    let numVotes = 0;\n    socket.on(\"vote\", () => {\n        numVotes ++;\n        if (numVotes == groupSize) {\n            setResultTime(true);\n        }\n    });\n    const db = firebase.firestore();\n    const myAsyncFunc = async() =>{\n        await getWord();\n        await db.collection(\"rooms\").where(\"code\", \"==\", code).get().then((querySnapshot) => {\n            querySnapshot.docs.forEach((snapshot) => {\n                snapshot.ref.collection(\"rounds\").where(\"round\", \"==\", round).get().then((querySnapshot) => {\n                    querySnapshot.docs.forEach((snapshot) => {\n                        snapshot.ref.collection(\"pictures\").get().then((querySnapshot) => {\n                            querySnapshot.docs.forEach((doc) => {\n                                setPictures(pictures => pictures.concat({picture: doc.data().dataURL, artist: doc.data().artist}));\n                            });\n                        });\n                    });\n                });\n            });\n        });\n        let time2 = 20;\n        const interval = setInterval(() => {\n            time2 = time2 - 1;\n            setTime( time => time - 1);\n            if (time2 == 0) {\n                clearInterval(interval);\n                setResultTime(true);\n            }\n        }, 1000);\n    }\n    myAsyncFunc();\n}, []);\n\n  const updateVote = (event) => {\n      setVote({vote: event.target.value});\n  }\n\n  const submitVote = async() => {\n      setVoting(false);\n      setDoneVoting(true);\n      let votedArtist = pictures[vote.vote].artist;\n      const db = firebase.firestore();\n      await db.collection(\"rooms\").where(\"code\", \"==\", code).get().then((querySnapshot) => {\n          querySnapshot.docs.forEach((snapshot) => {\n              snapshot.ref.collection(\"rounds\").where(\"round\", \"==\", round).get().then((querySnapshot) => {\n                  querySnapshot.docs.forEach((snapshot) => {\n                      snapshot.ref.collection(\"pictures\").where(\"artist\", \"==\", votedArtist).get().then((querySnapshot) => {\n                          querySnapshot.docs.forEach((snapshot) => {\n                              console.log(\"vote about to be counted for \" + snapshot.data().artist);\n                              setArtist(snapshot.data().artist);\n                              snapshot.ref.update({votes : firebase.firestore.FieldValue.increment(1)})\n                            });\n                        });\n                    });\n                });\n            });\n        });\n\n        db.collection(\"rooms\").where(\"code\", \"==\", code).get().then((querySnapshot) => {\n            querySnapshot.docs.forEach((snapshot) => {\n                snapshot.ref.collection(\"players\").where(\"name\", \"==\", votedArtist).get().then((querySnapshot) => {\n                    querySnapshot.docs.forEach((snapshot) => {\n                        console.log(\"total vote added to \" + votedArtist);\n                        snapshot.ref.update({\n                            score : firebase.firestore.FieldValue.increment(1)\n                        }).then(() => {\n                            socket.emit(\"vote\", code);\n                        });\n                    });\n                });\n            });\n        });\n    }\n\n    const getWord = async() => {\n        const db = firebase.firestore();\n        db.collection(\"rooms\").where(\"code\", \"==\", code).get().then((querySnapshot) => {\n          querySnapshot.docs.forEach((snapshot) => {\n            snapshot.ref.collection(\"rounds\").where(\"round\", \"==\", round).get().then((querySnapshot) => {\n              querySnapshot.docs.forEach((snapshot) => {\n                  setWord(snapshot.data().word);\n              });\n          });\n      });\n    });\n    }\n\n  return (\n    <div>\n        <div className=\"center\">\n            <h1 className=\"header1\">{time}</h1>\n            <h1 className=\"header1\">{word}</h1>\n        </div>\n        <div className=\"center\">\n            {pictures.map((picture, idx) => {\n                return (<div>\n                    <a href={picture.picture} download>{idx}</a>\n                    </div>)\n                })}\n        </div>\n        <div className=\"center\">\n            {voting ? <input type=\"text\" id=\"vote\" onChange={updateVote} ref={inputRef}/> : null }\n            {voting ? <button id=\"done\" onClick={submitVote}>Done</button> : null }\n            {doneVoting ? <h2 className=\"header3\">Waiting for other players to submit their votes...</h2> : null}\n        </div>\n        {resultTime ? <Redirect to={{pathname: '/result', state: {code: code, name: name, groupSize: groupSize, round: round}}}/> : null }\n    </div>\n    );\n}\n\nexport default Vote;","import React, { useRef, useEffect, useState } from 'react';\nimport socket from \"../socketConfig\";\nimport firebase from '../firebase.js';\nimport { Redirect } from 'react-router-dom';\nimport './styles.css';\n\nfunction Result(props) {\n  const [code, setCode] = useState(props.location.state.code);\n  const [name, setName] = useState(props.location.state.name);\n  const [winningPic, setWinningPic] = useState();\n  const [winningArtist, setWinningArtist] = useState();\n  const [round, setRound] = useState(props.location.state.round);\n  const [nextRoundTime, setNextRoundTime] = useState(false);\n  const [finalScoreTime, setFinalScoreTime] = useState(false);\n  const [groupSize, setGroupSize] = useState(props.location.state.groupSize);\n  const [word, setWord] = useState();\n\n  useEffect(() => {\n    const myAsyncFunc = async() => {\n        const db = firebase.firestore();\n        await db.collection(\"rooms\").where(\"code\", \"==\", code).get().then((querySnapshot) => {\n            querySnapshot.docs.forEach((snapshot) => {\n                snapshot.ref.collection(\"rounds\").where(\"round\", \"==\", round).get().then((querySnapshot) => {\n                    querySnapshot.docs.forEach((snapshot) => {\n                        snapshot.ref.collection(\"pictures\").orderBy(\"votes\", \"desc\").limit(1).get().then((querySnapshot) => {\n                            querySnapshot.docs.forEach((snapshot) => {\n                                setWinningPic(snapshot.data().dataURL);\n                                setWinningArtist(snapshot.data().artist);\n                            });\n                        });\n                    });\n                });\n            });\n        });\n\n        await db.collection(\"rooms\").where(\"code\", \"==\", code).get().then((querySnapshot) => {\n            querySnapshot.docs.forEach((snapshot) => {\n                snapshot.ref.collection(\"rounds\").where(\"round\", \"==\", round).get().then((querySnapshot) => {\n                    querySnapshot.docs.forEach((snapshot) => {\n                        setWord(snapshot.data().word);\n                    });\n                });\n            });\n        });\n        socket.on(\"nextRound\", () => {\n            setNextRoundTime(true);\n        });\n        socket.on(\"finalScore\", () => {\n            setFinalScoreTime(true);\n        });\n    }\n    myAsyncFunc();\n}, []);\n\nconst nextRound = () => {\n    if (round + 1 <= 5) {\n        socket.emit(\"nextRound\", code);\n    }\n    else {\n        socket.emit(\"finalScore\", code);\n    }\n}\nreturn (\n    <div>\n        <div className=\"center\">\n            <h1 className=\"header2\">{word}</h1>\n            <h1 className=\"header4\">{winningArtist} wins round {round}!</h1>\n            <button onClick={nextRound}>Next Round</button>\n        </div>\n        <img src={winningPic} id={winningPic}/>\n        {nextRoundTime ? <Redirect to={{pathname: '/game', state: {code: code, name: name, groupSize: groupSize, round: round + 1}}}/> : null }\n        {finalScoreTime ? <Redirect to={{pathname: '/final', state: {code: code, name: name, groupSize: groupSize, round: round + 1}}}/> : null }\n    </div>\n    );\n}\n\nexport default Result;","import React, { useRef, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport socket from \"../socketConfig\";\nimport firebase from '../firebase.js';\nimport './styles.css';\n\nfunction Final(props) {\n  const [code, setCode] = useState(props.location.state.code);\n  const [name, setName] = useState(props.location.state.name);\n  const [players, setPlayers] = useState([]);\n  const [winner, setWinner] = useState();\n  const [winningScore, setWinningScore] = useState(-1);\n  \n  useEffect(() => {\n    const db = firebase.firestore();\n    db.collection(\"rooms\").where(\"code\", \"==\", code).get().then((querySnapshot) => {\n      querySnapshot.docs.forEach((snapshot) => {\n        snapshot.ref.collection(\"players\").get().then((querySnapshot) => {\n          querySnapshot.docs.forEach((snapshot) => {\n            setPlayers(players => players.concat({name: snapshot.data().name, score: snapshot.data().score}));\n            if (snapshot.data().score > winningScore) {\n              setWinningScore(snapshot.data().score);\n              setWinner(snapshot.data().name);\n            }\n          });\n        });\n      });\n    });\n}, []);\n\n\n\nreturn (\n    <div>\n        <table>\n        <thead>\n          <tr><th>player</th><th>total votes</th></tr>\n        </thead>\n        <tbody>\n          {players.map((player, idx) => {\n            return (\n              <tr key={idx}>\n                <td>{player.name}</td>\n                <td>{player.score}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <h1>{winner} wins with a score of {winningScore} total votes!</h1>\n    </div>\n    );\n}\n\nexport default Final;\n\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router, \n  Route, \n  Switch, \n} from \"react-router-dom\";\nimport Home from \"./pages/home\";\nimport Create from \"./pages/create\";\nimport Join from \"./pages/join\";\nimport Room from \"./pages/room\";\nimport Game from \"./pages/game\";\nimport Vote from \"./pages/vote\";\nimport Result from \"./pages/result\";\nimport Final from \"./pages/final\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/create\" component={Create} />\n          <Route exact path=\"/join\" component={Join} />\n          <Route exact path=\"/room\" component={Room} />\n          <Route exact path=\"/game\" component={Game} />\n          <Route exact path=\"/vote\" component={Vote} />\n          <Route exact path=\"/result\" component={Result} />\n          <Route exact path=\"/final\" component={Final} />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}